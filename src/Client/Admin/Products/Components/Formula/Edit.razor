@using MudBlazor
@using Blazored.FluentValidation

<MudText Typo="Typo.h3">Edit</MudText>

<MudForm Model="@Formula" @ref="@form">
    <FluentValidationValidator />
    <MudTextField @bind-Value="Formula.Name" For="@(() => Formula.Name)" Label="Name" />
    <MudTextField @bind-Value="Formula.Description" For="@(() => Formula.Description)" Label="Description" Lines="3" />
    <MudNumericField @bind-Value="Formula.Price" For="@(() => Formula.Price)" Label="Price" />
    <MudNumericField @bind-Value="Formula.Days" For="@(() => Formula.Days)" Label="Price" />

    <MudText Typo="Typo.h5">Image in index page</MudText>
        <ImageCard url="@Formula.ImageUrl" formula="@Formula" />

    @if (!string.IsNullOrEmpty(Formula.ImageUrl?.ToString()))
    {
        <MudFileUpload T="IBrowserFile" FilesChanged="UploadImage">
            <ButtonTemplate>
                <MudButton HtmlTag="label"
                           Variant="Variant.Filled"
                           Color="Color.Primary"
                           StartIcon="@Icons.Material.Filled.CloudUpload"
                           for="@context">
                    Upload Picture
                </MudButton>
            </ButtonTemplate>
        </MudFileUpload>
    }

    <MudCardActions>
        <MudButton Variant="Variant.Filled" Color="Color.Primary" Class="ml-auto" StartIcon="@Icons.Material.Filled.Save" OnClick="@(() => UpdateFormulaAsync())">
            Save
        </MudButton>
        <MudButton Variant="Variant.Filled" Color="Color.Primary" StartIcon="@Icons.Material.Filled.Cancel" OnClick="@(()=>Close())">
            Cancel
        </MudButton>
    </MudCardActions>
</MudForm>

@code {

}
